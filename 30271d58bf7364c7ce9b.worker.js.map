{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/wave-resampler/lib/interpolator.js","webpack:///../node_modules/wave-resampler/index.js","webpack:///./libs/recorder.worker.js","webpack:///../node_modules/wave-resampler/lib/fir-lpf.js","webpack:///../node_modules/wave-resampler/lib/butterworth-lpf.js","webpack:///./libs/shortTimeEnergy.js"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window_","x","Math","exp","sincKernel_","window","sin","PI","sinc_","resample_","samples","newSamples","interpolator","len","length","interpolate","upsample_","filter","reset","downsample_","mergeArray","list","data","Float32Array","offset","set","writeUTFBytes","view","string","lng","setUint8","charCodeAt","Interpolator","scaleFrom","scaleTo","details","this","length_","scaleFactor_","cubic","method","point","linear","sinc","tangentFactor_","max","min","tension","sincFilterSize_","sincFilterSize","kernel_","sincWindow","getClippedInput_","round","k","floor","getTangent_","t2","t3","ref1","sum","FIRLPF","order","sampleRate","cutOff","omega","dc","filters","cos","z","initZ_","sample","buf","pointer","out","push","DEFAULT_LPF_USE","DEFAULT_LPF_ORDER","DEFAULT_LPF","getCoeffs_","Fs","Fc","Q","stages","b0","b","b1","b2","a1","a","a2","runStage_","params","coeffs","preCalc_","cw","a0","pre","w","alpha","input","temp","shortTimeEnergy","audioData","energy","self","addEventListener","event","type","audioBuffers","inputSampleRate","outputSampleRate","postMessage","oldSampleRate","Float64Array","undefined","LPF","LPFType","LPFOrder","resample","channels","buffer","ArrayBuffer","DataView","setUint32","setUint16","index","volume","setInt16","createWavBuffer"],"mappings":"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","file":"30271d58bf7364c7ce9b.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/record-test/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"EIFZ\");\n","/*\r\n * Copyright (c) 2019 Rafael da Silva Rocha.\r\n * Copyright 2012 Spencer Cohen\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview The Interpolator class. Based on Smooth.js by Spencer Cohen.\r\n * @see https://github.com/rochars/wave-resampler\r\n * @see https://github.com/osuushi/Smooth.js\r\n */\r\n\r\n/**\r\n * A class to get scaled values out of arrays.\r\n */\r\nexport class Interpolator {\r\n  \r\n  /**\r\n   * @param {number} scaleFrom the length of the original array.\r\n   * @param {number} scaleTo The length of the new array.\r\n   * @param {?Object} details The extra configuration, if needed.\r\n   */\r\n  constructor(scaleFrom, scaleTo, details) {\r\n    /**\r\n     * The length of the original array.\r\n     * @type {number}\r\n     */\r\n    this.length_ = scaleFrom;\r\n    /**\r\n     * The scaling factor.\r\n     * @type {number}\r\n     */\r\n    this.scaleFactor_ = (scaleFrom - 1) / scaleTo;\r\n    /**\r\n     * The interpolation function.\r\n     * @type {Function}\r\n     */\r\n    this.interpolate = this.cubic;\r\n    if (details.method === 'point') {\r\n    \tthis.interpolate = this.point;\r\n    } else if(details.method === 'linear') {\r\n    \tthis.interpolate = this.linear;\r\n    } else if(details.method === 'sinc') {\r\n    \tthis.interpolate = this.sinc;\r\n    }\r\n    /**\r\n     * The tanget factor for cubic interpolation.\r\n     * @type {number}\r\n     */\r\n    this.tangentFactor_ = 1 - Math.max(0, Math.min(1, details.tension || 0));\r\n    // Configure the kernel for sinc\r\n    /**\r\n     * The sinc filter size.\r\n     * @type {number}\r\n     */\r\n    this.sincFilterSize_ = details.sincFilterSize || 1;\r\n    /**\r\n     * The sinc kernel.\r\n     * @type {Function}\r\n     */\r\n    this.kernel_ = sincKernel_(details.sincWindow || window_);\r\n  }\r\n\r\n  /**\r\n   * @param {number} t The index to interpolate.\r\n   * @param {Array|TypedArray} samples the original array.\r\n   * @return {number} The interpolated value.\r\n   */\r\n  point(t, samples) {\r\n    return this.getClippedInput_(Math.round(this.scaleFactor_ * t), samples);\r\n  }\r\n\r\n  /**\r\n   * @param {number} t The index to interpolate.\r\n   * @param {Array|TypedArray} samples the original array.\r\n   * @return {number} The interpolated value.\r\n   */\r\n  linear(t, samples) {\r\n    t = this.scaleFactor_ * t;\r\n    let k = Math.floor(t);\r\n    t -= k;\r\n    return (1 - t) *\r\n    \tthis.getClippedInput_(k, samples) + t *\r\n    \tthis.getClippedInput_(k + 1, samples);\r\n  }\r\n\r\n  /**\r\n   * @param {number} t The index to interpolate.\r\n   * @param {Array|TypedArray} samples the original array.\r\n   * @return {number} The interpolated value.\r\n   */\r\n  cubic(t, samples) {\r\n    t = this.scaleFactor_ * t;\r\n    let k = Math.floor(t);\r\n    let m = [this.getTangent_(k, samples), this.getTangent_(k + 1, samples)];\r\n    let p = [this.getClippedInput_(k, samples),\r\n      this.getClippedInput_(k + 1, samples)];\r\n    t -= k;\r\n    let t2 = t * t;\r\n    let t3 = t * t2;\r\n    return (2 * t3 - 3 * t2 + 1) *\r\n      p[0] + (t3 - 2 * t2 + t) *\r\n      m[0] + (-2 * t3 + 3 * t2) *\r\n      p[1] + (t3 - t2) * m[1];\r\n  }\r\n\r\n  /**\r\n   * @param {number} t The index to interpolate.\r\n   * @param {Array|TypedArray} samples the original array.\r\n   * @return {number} The interpolated value.\r\n   */\r\n  sinc(t, samples) {\r\n    t = this.scaleFactor_ * t;\r\n    let k = Math.floor(t);\r\n    let ref = k - this.sincFilterSize_ + 1;\r\n    let ref1 = k + this.sincFilterSize_;\r\n    let sum = 0;\r\n    for (let n = ref; n <= ref1; n++) {\r\n      sum += this.kernel_(t - n) * this.getClippedInput_(n, samples);\r\n    }\r\n    return sum;\r\n  }\r\n\r\n  /**\r\n   * @param {number} k The scaled index to interpolate.\r\n   * @param {Array|TypedArray} samples the original array.\r\n   * @return {number} The tangent.\r\n   * @private\r\n   */\r\n  getTangent_(k, samples) {\r\n    return this.tangentFactor_ *\r\n      (this.getClippedInput_(k + 1, samples) -\r\n        this.getClippedInput_(k - 1, samples)) / 2;\r\n  }\r\n\r\n  /**\r\n   * @param {number} t The scaled index to interpolate.\r\n   * @param {Array|TypedArray} samples the original array.\r\n   * @return {number} The interpolated value.\r\n   * @private\r\n   */\r\n  getClippedInput_(t, samples) {\r\n    if ((0 <= t && t < this.length_)) {\r\n      return samples[t];\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\n// Sinc functions\r\n\r\n/**\r\n * The default window function.\r\n * @param {number} x The sinc signal.\r\n * @return {number}\r\n * @private\r\n */\r\nfunction window_(x) {\r\n  return Math.exp(-x / 2 * x / 2);\r\n}\r\n\r\n/**\r\n * @param {Function} window The window function.\r\n * @return {Function}\r\n * @private\r\n */\r\nfunction sincKernel_(window) {\r\n  return function(x) { return sinc_(x) * window(x); };\r\n}\r\n\r\n/**\r\n * @param {number} x The sinc signal.\r\n * @return {number}\r\n * @private\r\n */\r\nfunction sinc_(x) {\r\n  if (x === 0) {\r\n    return 1;\r\n  }\r\n  return Math.sin(Math.PI * x) / (Math.PI * x);\r\n}\r\n\r\n","/*\r\n * Copyright (c) 2019 Rafael da Silva Rocha.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview The resample function.\r\n * @see https://github.com/rochars/wave-resampler\r\n */\r\n\r\nimport { Interpolator } from './lib/interpolator';\r\nimport { FIRLPF } from './lib/fir-lpf';\r\nimport { ButterworthLPF } from './lib/butterworth-lpf';\r\n\r\n/**\r\n * Configures wich resampling method uses LPF by default.\r\n * @private\r\n */\r\nconst DEFAULT_LPF_USE = {\r\n  'point': false,\r\n  'linear': false,\r\n  'cubic': true,\r\n  'sinc': true\r\n};\r\n\r\n/**\r\n * The default orders for the LPF types.\r\n * @private\r\n */\r\nconst DEFAULT_LPF_ORDER = {\r\n  'IIR': 16,\r\n  'FIR': 71\r\n};\r\n\r\n/**\r\n * The classes to use with each LPF type.\r\n * @private\r\n */\r\nconst DEFAULT_LPF = {\r\n  'IIR': ButterworthLPF,\r\n  'FIR': FIRLPF\r\n};\r\n\r\n/**\r\n * Change the sample rate of the samples to a new sample rate.\r\n * @param {!Array|!TypedArray} samples The original samples.\r\n * @param {number} oldSampleRate The original sample rate.\r\n * @param {number} sampleRate The target sample rate.\r\n * @param {?Object} details The extra configuration, if needed.\r\n * @return {!Float64Array} the new samples.\r\n */\r\nexport function resample(samples, oldSampleRate, sampleRate, details={}) {  \r\n  // Make the new sample container\r\n  let rate = ((sampleRate - oldSampleRate) / oldSampleRate) + 1;\r\n  let newSamples = new Float64Array(samples.length * (rate));\r\n  // Create the interpolator\r\n  details.method = details.method || 'cubic';\r\n  let interpolator = new Interpolator(\r\n    samples.length,\r\n    newSamples.length,\r\n    {\r\n      method: details.method,\r\n      tension: details.tension || 0,\r\n      sincFilterSize: details.sincFilterSize || 6,\r\n      sincWindow: details.sincWindow || undefined\r\n    });\r\n  // Resample + LPF\r\n  if (details.LPF === undefined) {\r\n    details.LPF = DEFAULT_LPF_USE[details.method];\r\n  } \r\n  if (details.LPF) {\r\n    details.LPFType = details.LPFType || 'IIR';\r\n    const LPF = DEFAULT_LPF[details.LPFType];\r\n    // Upsampling\r\n    if (sampleRate > oldSampleRate) {\r\n      let filter = new LPF(\r\n        details.LPFOrder || DEFAULT_LPF_ORDER[details.LPFType],\r\n        sampleRate,\r\n        (oldSampleRate / 2));\r\n      upsample_(\r\n        samples, newSamples, interpolator, filter);\r\n    // Downsampling\r\n    } else {\r\n      let filter = new LPF(\r\n        details.LPFOrder || DEFAULT_LPF_ORDER[details.LPFType],\r\n        oldSampleRate,\r\n        sampleRate / 2);\r\n      downsample_(\r\n        samples, newSamples, interpolator, filter);\r\n    }\r\n  // Resample, no LPF\r\n  } else {\r\n    resample_(samples, newSamples, interpolator);\r\n  }\r\n  return newSamples;\r\n}\r\n\r\n/**\r\n * Resample.\r\n * @param {!Array|!TypedArray} samples The original samples.\r\n * @param {!Float64Array} newSamples The container for the new samples.\r\n * @param {Object} interpolator The interpolator.\r\n * @private\r\n */\r\nfunction resample_(samples, newSamples, interpolator) {\r\n  // Resample\r\n  for (let i = 0, len = newSamples.length; i < len; i++) {\r\n    newSamples[i] = interpolator.interpolate(i, samples);\r\n  }\r\n}\r\n\r\n/**\r\n * Upsample with LPF.\r\n * @param {!Array|!TypedArray} samples The original samples.\r\n * @param {!Float64Array} newSamples The container for the new samples.\r\n * @param {Object} interpolator The interpolator.\r\n * @param {Object} filter The LPF object.\r\n * @private\r\n */\r\nfunction upsample_(samples, newSamples, interpolator, filter) {\r\n  // Resample and filter\r\n  for (let i = 0, len = newSamples.length; i < len; i++) {\r\n    newSamples[i] = filter.filter(interpolator.interpolate(i, samples));\r\n  }\r\n  // Reverse filter\r\n  filter.reset();\r\n  for (let i = newSamples.length - 1; i >= 0; i--) {\r\n    newSamples[i]  = filter.filter(newSamples[i]);\r\n  }\r\n}\r\n\r\n/**\r\n * Downsample with LPF.\r\n * @param {!Array|!TypedArray} samples The original samples.\r\n * @param {!Float64Array} newSamples The container for the new samples.\r\n * @param {Object} interpolator The interpolator.\r\n * @param {Object} filter The LPF object.\r\n * @private\r\n */\r\nfunction downsample_(samples, newSamples, interpolator, filter) {\r\n  // Filter\r\n  for (let i = 0, len = samples.length; i < len; i++) {\r\n    samples[i]  = filter.filter(samples[i]);\r\n  }\r\n  // Reverse filter\r\n  filter.reset();\r\n  for (let i = samples.length - 1; i >= 0; i--) {\r\n    samples[i]  = filter.filter(samples[i]);\r\n  }\r\n  // Resample\r\n  resample_(samples, newSamples, interpolator);\r\n}\r\n","// import { Mp3Encoder } from 'lamejs'\r\nimport { resample } from 'wave-resampler'\r\n// import { encode as base64Encode } from 'base64-arraybuffer'\r\nimport shortTimeEnergy from './shortTimeEnergy'\r\n\r\nfunction mergeArray(list) {\r\n  const length = list.length * list[0].length\r\n  const data = new Float32Array(length)\r\n  let offset = 0\r\n  for (let i = 0; i < list.length; i++) {\r\n    data.set(list[i], offset)\r\n    offset += list[i].length\r\n  }\r\n  return data\r\n}\r\n\r\n// function float32ToInt16(audioBuffers, inputSampleRate, outputSampleRate) {\r\n//   const float32 = resample(\r\n//     mergeArray(audioBuffers),\r\n//     inputSampleRate,\r\n//     outputSampleRate,\r\n//   )\r\n//   const int16 = Int16Array.from(\r\n//     float32.map(x => (x > 0 ? x * 0x7fff : x * 0x8000)),\r\n//   )\r\n//   return int16\r\n// }\r\n\r\nfunction writeUTFBytes(view, offset, string) {\r\n  var lng = string.length\r\n  for (let i = 0; i < lng; i++) {\r\n    view.setUint8(offset + i, string.charCodeAt(i))\r\n  }\r\n}\r\n\r\nfunction createWavBuffer(audioData, sampleRate = 44100, channels = 1) {\r\n  // audioData = mergeArray(audioData)\r\n  const WAV_HEAD_SIZE = 44\r\n  const buffer = new ArrayBuffer(audioData.length * 2 + WAV_HEAD_SIZE)\r\n  // 需要用一个view来操控buffer\r\n  const view = new DataView(buffer)\r\n  // 写入wav头部信息\r\n  // RIFF chunk descriptor/identifier\r\n  writeUTFBytes(view, 0, 'RIFF')\r\n  // RIFF chunk length\r\n  view.setUint32(4, 44 + audioData.length * 2, true)\r\n  // RIFF type\r\n  writeUTFBytes(view, 8, 'WAVE')\r\n  // format chunk identifier\r\n  // FMT sub-chunk\r\n  writeUTFBytes(view, 12, 'fmt ')\r\n  // format chunk length\r\n  view.setUint32(16, 16, true)\r\n  // sample format (raw)\r\n  view.setUint16(20, 1, true)\r\n  // stereo (2 channels)\r\n  view.setUint16(22, channels, true)\r\n  // sample rate\r\n  view.setUint32(24, sampleRate, true)\r\n  // byte rate (sample rate * block align)\r\n  view.setUint32(28, sampleRate * 2, true)\r\n  // block align (channel count * bytes per sample)\r\n  view.setUint16(32, channels * 2, true)\r\n  // bits per sample\r\n  view.setUint16(34, 16, true)\r\n  // data sub-chunk\r\n  // data chunk identifier\r\n  writeUTFBytes(view, 36, 'data')\r\n  // data chunk length\r\n  view.setUint32(40, audioData.length * 2, true)\r\n\r\n  // 写入PCM数据\r\n  let index = 44\r\n  const volume = 1\r\n  const { length } = audioData\r\n  for (let i = 0; i < length; i++) {\r\n    view.setInt16(index, audioData[i] * (0x7fff * volume), true)\r\n    index += 2\r\n  }\r\n  return buffer\r\n}\r\n\r\nself.addEventListener('message', event => {\r\n  const {\r\n    data: {\r\n      type,\r\n      // format,\r\n      audioBuffers,\r\n      inputSampleRate,\r\n      outputSampleRate,\r\n      // kbps = 64,\r\n    },\r\n  } = event\r\n\r\n  // if (type === 'int16') {\r\n  //   const int16 = float32ToInt16(\r\n  //     audioBuffers,\r\n  //     inputSampleRate,\r\n  //     outputSampleRate,\r\n  //   )\r\n  //   self.postMessage(format === 'base64' ? base64Encode(int16.buffer) : int16)\r\n  // }\r\n\r\n  // if (type === 'mp3') {\r\n  //   let mp3buf\r\n  //   const mp3Data = []\r\n  //   const sampleBlockSize = 576 * 10\r\n  //   const mp3Encoder = new Mp3Encoder(1, outputSampleRate, kbps)\r\n  //   const samples = float32ToInt16(\r\n  //     audioBuffers,\r\n  //     inputSampleRate,\r\n  //     outputSampleRate,\r\n  //   )\r\n\r\n  //   let remaining = samples.length\r\n  //   for (let i = 0; remaining >= 0; i += sampleBlockSize) {\r\n  //     const left = samples.subarray(i, i + sampleBlockSize)\r\n  //     mp3buf = mp3Encoder.encodeBuffer(left)\r\n  //     mp3Data.push(new Int8Array(mp3buf))\r\n  //     remaining -= sampleBlockSize\r\n  //   }\r\n\r\n  //   mp3Data.push(new Int8Array(mp3Encoder.flush()))\r\n\r\n  //   self.postMessage(format === 'base64' ? base64Encode(mp3Data) : mp3Data)\r\n  //   mp3Data.length = 0\r\n  // }\r\n\r\n  if (type === 'short-energy') {\r\n    self.postMessage(shortTimeEnergy(mergeArray(audioBuffers)))\r\n  }\r\n\r\n  if (type === 'wav') {\r\n    const samples = resample(\r\n      mergeArray(audioBuffers),\r\n      inputSampleRate,\r\n      outputSampleRate,\r\n    )\r\n    self.postMessage(createWavBuffer(samples, outputSampleRate))\r\n  }\r\n})\r\n","/*\r\n * Copyright (c) 2019 Rafael da Silva Rocha.\r\n * Copyright (c) 2014 Florian Markert\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview FIR LPF. Based on the FIR LPF from Fili by Florian Markert.\r\n * @see https://github.com/rochars/wave-resampler\r\n * @see https://github.com/markert/fili.js\r\n */\r\n\r\n/**\r\n * A FIR low pass filter.\r\n */\r\nexport class FIRLPF {\r\n  \r\n  /**\r\n   * @param {number} order The order of the filter.\r\n   * @param {number} sampleRate The sample rate.\r\n   * @param {number} cutOff The cut off frequency.\r\n   */\r\n  constructor(order, sampleRate, cutOff) {\r\n    let omega = 2 * Math.PI * cutOff / sampleRate;\r\n    let dc = 0;\r\n    this.filters = [];\r\n    for (let i = 0; i <= order; i++) {\r\n      if (i - order / 2 === 0) {\r\n        this.filters[i] = omega;\r\n      } else {\r\n        this.filters[i] = Math.sin(omega * (i - order / 2)) / (i - order / 2);\r\n        // Hamming window\r\n        this.filters[i] *= (0.54 - 0.46 * Math.cos(2 * Math.PI * i / order));\r\n      }\r\n      dc = dc + this.filters[i];\r\n    }\r\n    // normalize\r\n    for (let i = 0; i <= order; i++) {\r\n      this.filters[i] /= dc;\r\n    }\r\n    this.z = this.initZ_();\r\n  }\r\n\r\n  /**\r\n   * @param {number} sample A sample of a sequence.\r\n   * @return {number}\r\n   */\r\n  filter(sample) {\r\n    this.z.buf[this.z.pointer] = sample;\r\n    let out = 0;\r\n    for (let i = 0, len = this.z.buf.length; i < len; i++) {\r\n      out += (\r\n        this.filters[i] * this.z.buf[(this.z.pointer + i) % this.z.buf.length]);\r\n    }\r\n    this.z.pointer = (this.z.pointer + 1) % (this.z.buf.length);\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Reset the filter.\r\n   */\r\n  reset() {\r\n    this.z = this.initZ_();\r\n  }\r\n\r\n  /**\r\n   * Return the default value for z.\r\n   * @private\r\n   */\r\n  initZ_() {\r\n    let r = [];\r\n    for (let i = 0; i < this.filters.length - 1; i++) {\r\n      r.push(0);\r\n    }\r\n    return {\r\n      buf: r,\r\n      pointer: 0\r\n    };\r\n  }\r\n}\r\n","/*\r\n * Copyright (c) 2019 Rafael da Silva Rocha.\r\n * Copyright (c) 2014 Florian Markert\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining\r\n * a copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to\r\n * permit persons to whom the Software is furnished to do so, subject to\r\n * the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be\r\n * included in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * @fileoverview Butterworth LPF. Based on the Butterworth LPF from Fili.js.\r\n * @see https://github.com/rochars/wave-resampler\r\n * @see https://github.com/markert/fili.js\r\n */\r\n\r\n/**\r\n * Butterworth LPF.\r\n */\r\nexport class ButterworthLPF {\r\n  \r\n  /**\r\n   * @param {number} order The order of the filter.\r\n   * @param {number} sampleRate The sample rate.\r\n   * @param {number} cutOff The cut off frequency.\r\n   */\r\n  constructor(order, sampleRate, cutOff) {\r\n    let filters = [];\r\n    for (let i = 0; i < order; i++) {\r\n      filters.push(this.getCoeffs_({\r\n        Fs: sampleRate,\r\n        Fc: cutOff,\r\n        Q: 0.5 / (Math.sin((Math.PI / (order * 2)) * (i + 0.5)))\r\n      }));\r\n    }\r\n    this.stages = [];\r\n    for (let i = 0; i < filters.length; i++) {\r\n      this.stages[i] = {\r\n        b0 : filters[i].b[0],\r\n        b1 : filters[i].b[1],\r\n        b2 : filters[i].b[2],\r\n        a1 : filters[i].a[0],\r\n        a2 : filters[i].a[1],\r\n        k : filters[i].k,\r\n        z : [0, 0]\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} sample A sample of a sequence.\r\n   * @return {number}\r\n   */\r\n  filter(sample) {\r\n    let out = sample;\r\n    for (let i = 0, len = this.stages.length; i < len; i++) {\r\n      out = this.runStage_(i, out);\r\n    }\r\n    return out;\r\n  }\r\n\r\n  getCoeffs_(params) {\r\n    let coeffs = {};\r\n    coeffs.z = [0, 0];\r\n    coeffs.a = [];\r\n    coeffs.b = [];\r\n    let p = this.preCalc_(params, coeffs);\r\n    coeffs.k = 1;\r\n    coeffs.b.push((1 - p.cw) / (2 * p.a0));\r\n    coeffs.b.push(2 * coeffs.b[0]);\r\n    coeffs.b.push(coeffs.b[0]);\r\n    return coeffs;\r\n  }\r\n\r\n  preCalc_(params, coeffs) {\r\n    let pre = {};\r\n    let w = 2 * Math.PI * params.Fc / params.Fs;\r\n    pre.alpha = Math.sin(w) / (2 * params.Q);\r\n    pre.cw = Math.cos(w);\r\n    pre.a0 = 1 + pre.alpha;\r\n    coeffs.a0 = pre.a0;\r\n    coeffs.a.push((-2 * pre.cw) / pre.a0);\r\n    coeffs.k = 1;\r\n    coeffs.a.push((1 - pre.alpha) / pre.a0);\r\n    return pre;\r\n  }\r\n  \r\n  runStage_(i, input) {\r\n    let temp =\r\n      input * this.stages[i].k - this.stages[i].a1 * this.stages[i].z[0] -\r\n      this.stages[i].a2 * this.stages[i].z[1];\r\n    let out =\r\n      this.stages[i].b0 * temp + this.stages[i].b1 * this.stages[i].z[0] +\r\n      this.stages[i].b2 * this.stages[i].z[1];\r\n    this.stages[i].z[1] = this.stages[i].z[0];\r\n    this.stages[i].z[0] = temp;\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Reset the filter.\r\n   */\r\n  reset() {\r\n    for (let i = 0; i < this.stages.length; i++) {\r\n      this.stages[i].z = [0, 0];\r\n    }\r\n  }\r\n}\r\n","function shortTimeEnergy(audioData) {\r\n  let sum = 0\r\n  const energy = []\r\n  const { length } = audioData\r\n  for (let i = 0; i < length; i++) {\r\n    sum += audioData[i] ** 2\r\n\r\n    if ((i + 1) % 256 === 0) {\r\n      energy.push(sum)\r\n      sum = 0\r\n    } else if (i === length - 1) {\r\n      energy.push(sum)\r\n    }\r\n  }\r\n  return energy\r\n}\r\n\r\nexport default shortTimeEnergy\r\n"],"sourceRoot":""}